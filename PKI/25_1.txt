1. Инициализируем подключение к YC (yc init)
2. Создаем сеть 
yc vpc network create --name sb-network-1 --description "for sb"
  folder_id: b1goqsaidcslutlnuhl5
  created_at: "2025-04-13T11:22:25Z"
  name: sb-network-1
  description: for sb
  default_security_group_id: enp6dq1qbfjrnsvjsd5g
Создаем подсеть
yc vpc subnet create --name sb-subnet-1 --description "for sb" --network-name sb-network-1 --zone ru-central1-b --range 192.168.0.0/24
  id: e2l56e5qq70tv4up8b27
  folder_id: b1goqsaidcslutlnuhl5
  created_at: "2025-05-28T07:01:19Z"
  name: sb-subnet-1
  description: for sb
  network_id: enpjhmn0fuei7lcqio4b
  zone_id: ru-central1-b
  v4_cidr_blocks:
    - 192.168.0.0/24
Создаем SSH ключ для ВМ
ssh-keygen -t ed25519 -C "for yc"
pub ключ : "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBrsaNKly1fngWi7zKzg8dAfcxAv5YqM8eyvvq7HLLBf for yc"
Создаем VM 
yc compute instance create --name pki-server --preemptible --zone ru-central1-b --network-interface subnet-name=sb-subnet-1,nat-ip-version=ipv4 --create-boot-disk image-folder-id=standard-images,image-family=ubuntu-24-04-lts,size=10G, --memory 2G --cores 2 --hostname pki-srv.rma-dev.ru --ssh-key C:\Users\mr\.ssh\id_rsa.pub 
  id: epd4juc4j6vc8cdoa66l
  folder_id: b1goqsaidcslutlnuhl5
  created_at: "2025-05-28T07:02:39Z"
  name: pki-server
 zone_id: ru-central1-b
  platform_id: standard-v2
 resources:
    memory: "2147483648"
    cores: "2"
    core_fraction: "100"
  status: RUNNING 
  metadata_options:
    gce_http_endpoint: ENABLED
    aws_v1_http_endpoint: ENABLED
    gce_http_token: ENABLED
    aws_v1_http_token: DISABLED
  boot_disk:
    mode: READ_WRITE
    device_name: epd3gr90m1cknrisc4hg
    auto_delete: true
    disk_id: epd3gr90m1cknrisc4hg
  network_interfaces:
    - index: "0"
      mac_address: d0:0d:49:f9:84:99
      subnet_id: e2l56e5qq70tv4up8b27
      primary_v4_address:
        address: 192.168.0.11
        one_to_one_nat:
          address: 158.160.20.127
          ip_version: IPV4
  serial_port_settings:
    ssh_authorization: OS_LOGIN
  gpu_settings: {}
  fqdn: epd4juc4j6vc8cdoa66l.auto.internal
  scheduling_policy:
    preemptible: true
  network_settings:
    type: STANDARD
  placement_policy: {}
  hardware_generation:
    legacy_features:
      pci_topology: PCI_TOPOLOGY_V1
Создадим статику IP 
yc vpc address update e2l9fqmrqg5o74471652 --reserved=true
  id: e2l9fqmrqg5o74471652
  folder_id: b1goqsaidcslutlnuhl5
  created_at: "2025-05-28T07:02:57Z"
  external_ipv4_address:
    address: 158.160.20.127
    zone_id: ru-central1-b
    requirements: {}
  reserved: true
  used: true 
  type: EXTERNAL
  ip_version: IPV4
-----------------------------------
Установка Easy-Rsa
sudo apt-get update
sudo apt install easy-rsa -y
mkdir ~/easy-rsa
ln -s /usr/share/easy-rsa/* ~/easy-rsa/
chmod 700 ~/easy-rsa
cd ~/easy-rsa

export DEBEMAIL="rinasmichael@gmail.com"
export DEBFULLNAME="Rinas Mikhail"

source ~/.bashrc

./easyrsa init-pki

#'init-pki' complete; you may now create a CA or requests.

Your newly created PKI dir is:
* /home/yc-user/easy-rsa/pki

Using Easy-RSA configuration:
* undefined
#for ssh Security close root login,password login and enable Pubkey auth
sudo sed -i '/PermitRootLogin\|PermitEmptyPasswords\|PasswordAuthentication\|PubkeyAuthentication/Id' /etc/ssh/sshd_config
sudo cat >> /etc/ssh/sshd_config <<EOF
PermitRootLogin No
PasswordAuthentication No
PermitEmptyPasswords No
PubkeyAuthentication yes
EOF
sudo systemctl restart sshd


#Создаем файл vars в корне easy-rsa
read -p "Enter EASYRSA_REQ_COUNTRY var: " EASYRSA_REQ_COUNTRY
read -p "Enter EASYRSA_REQ_PROVINCE var: " EASYRSA_REQ_PROVINCE
read -p "Enter EASYRSA_REQ_CITY var: " EASYRSA_REQ_CITY
read -p "Enter EASYRSA_REQ_ORG var: " EASYRSA_REQ_ORG
read -p "Enter EASYRSA_REQ_EMAIL var: " EASYRSA_REQ_EMAIL
read -p "Enter EASYRSA_REQ_OU var: " EASYRSA_REQ_OU
cat >> ~/easy-rsa/vars <<EOF
set_var EASYRSA_REQ_COUNTRY $EASYRSA_REQ_COUNTRY
set_var EASYRSA_REQ_PROVINCE $EASYRSA_REQ_PROVINCE
set_var EASYRSA_REQ_CITY $EASYRSA_REQ_CITY
set_var EASYRSA_REQ_ORG $EASYRSA_REQ_ORG
set_var EASYRSA_REQ_EMAIL $EASYRSA_REQ_EMAIL
set_var EASYRSA_REQ_OU $EASYRSA_REQ_OU
set_var EASYRSA_ALGO "ec"
set_var EASYRSA_DIGEST "sha512"
EOF

Создаем корневой сертификат ./easyrsa build-ca
Common name pki-server.rma-dev.ru

-----------------------------------
устанавливаем sudo apt-get install iptables-persistent -y
запрещаем все, кроме SSH( потом решим что еще открыть)
sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT
sudo iptables -A INPUT -p icmp --icmp-type 8 -j ACCEPT
sudo iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
sudo iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
sudo iptables -A INPUT -i lo -j ACCEPT
sudo iptables -P INPUT DROP
-------------------------------------------------
sudo netfilter-persistent save

v2

копируем на сервер easy-pki server.key
Подписываем сертификат сервера vpn
./easyrsa sign-req server server



-----------------------------------
устанавливаем sudo apt-get install iptables-persistent -y
запрещаем все, кроме SSH( потом решим что еще открыть)
sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT
sudo iptables -A INPUT -p icmp --icmp-type 8 -j ACCEPT
sudo iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
sudo iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
sudo iptables -A INPUT -i lo -j ACCEPT
sudo iptables -P INPUT DROP
-------------------------------------------------
sudo netfilter-persistent save

v2

копируем на сервер easy-pki server.k
Подписываем сертификат сервера vpn
./easyrsa sign-req server server




chown -R yc-user:yc-user /opt/easy-rsa
#Cert PKI_SRV  /opt/easy-rsa/ca.crt
--------------------------------------

2) Выбираем подсеть для виртуалки 
yc vpc subnet list
 sb-subnet-1
yc compute instance create --name vpn-server --preemptible --zone ru-central1-b --network-interface subnet-name=sb-subnet-1,nat-ip-version=ipv4 --create-boot-disk image-folder-id=standard-images,image-family=ubuntu-24-04-lts,size=10G --memory 2G --cores 2 --core-fraction 5 --hostname vpn-srv.rma-dev.ru --ssh-key C:\Users\mr\.ssh\id_rsa.pub

158.160.1.206

sudo apt update
sudo apt-get install iptables-persistent -y
sudo iptables -A INPUT -p tcp --dport 1194 -j ACCEPT
sudo netfilter-persistent save
sudo apt install easy-rsa openvpn 
sudo mkdir -p /opt/easy-rsa
sudo mkdir -p /opt/openvpn
sudo ln -s /usr/share/easy-rsa/* /opt/easy-rsa/
sudo ln -s /etc/openvpn/* /opt/openvpn/
sudo chown -R $USER:$USER /opt/easy-rsa
sudo chown -R $USER:$USER /opt/openvpn
sudo chown -R $USER:$USER /etc/openvpn
cd /opt/easy-rsa
./easyrsa init-pki
./easyrsa gen-req server nopass
Private-Key and Public-Certificate-Request files created.
Your files are:
* req: /opt/easy-rsa/pki/reqs/server.req
* key: /opt/easy-rsa/pki/private/server.key
hostname vpn.rma-dev.ru
#копируем ключи для работы через ssh двух серверов...
scp C:\Users\mr\.ssh\id_rsa.pub yc-user@pki.rma-dev.ru:~/.ssh/
scp C:\Users\mr\.ssh\id_rsa yc-user@pki.rma-dev.ru:~/.ssh/
scp C:\Users\mr\.ssh\id_rsa.pub yc-user@vpn.rma-dev.ru:~/.ssh/
scp C:\Users\mr\.ssh\id_rsa yc-user@vpn.rma-dev.ru:~/.ssh/

#Копируем из VPN-SERVER в PKI
chown 600 
scp /opt/easy-rsa/pki/reqs/server.req pki.rma-dev.ru:/opt/easy-rsa/pki/reqs/server.req
scp /opt/easy-rsa/pki/private/server.key pki.rma-dev.ru:/opt/easy-rsa/pki/private/server.key




#подписываем на PKI-SERVER:
./easyrsa sign-req server server 

# commonName                = vpn.rma-dev.ru -----yes...вводим пароль на сертификат
#Certificate created at:
#* /opt/easy-rsa/pki/issued/server.crt

копируем в впн сервер серты ca.crt и server.crt
mkdir /opt/openvpn/certs/
scp pki.rma-dev.ru:/opt/easy-rsa/pki/ca.crt /opt/openvpn/certs/
scp pki.rma-dev.ru:/opt/easy-rsa/pki/issued/server.crt /opt/openvpn/certs/

#Создание  tls-crypt
openvpn --genkey secret ta.key
sudo cp ta.key /etc/openvpn/server
#Создаем клиентов
mkdir -p opt/openvpn/clients/keys



--Подписываем на pki server

--./easyrsa sign-req client client-1
--#Certificate created at:
--#* /opt/easy-rsa/pki/issued/client-1.crt
--копируем этот файл на сервер впн
--scp pki.rma-dev.ru:/opt/easy-rsa/pki/issued/client-1.crt /opt/openvpn/certs/
--????sudo cp /opt/openvpn/certs/client-1.crt /etc/openvpn/server/


Конфигурим server.conf:
cp /usr/share/doc/openvpn/examples/sample-config-files/server.conf /etc/openvpn/


tls-crypt ta.key
cipher AES-256-GCM
auth SHA256
dh none
user nobody
group nogroup

cp /opt/openvpn/certs/*.crt /etc/openvpn/server

/etc/systemctl.conf
sudo sed -i "$ a net.ipv4.ip_forward = 1" /etc/sysctl.conf
sudo sysctl -p

firewall:
interface $INTERFACE udp 1194

INTERFACE=$(ip route show default | awk '/default/ {print $5}')

sudo iptables -A INPUT -i $INTERFACE -m state --state NEW -p "udp" --dport 1194 -j ACCEPT
sudo iptables -A INPUT -i tun+ -j ACCEPT
sudo iptables -A FORWARD -i tun+ -j ACCEPT
sudo iptables -A FORWARD -i tun+ -o $INTERFACE -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -A FORWARD -i $INTERFACE -o tun+ -m state --state RELATED,ESTABLISHED -j ACCEPT
sudo iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o $INTERFACE -j MASQUERADE


mkdir -p /etc/openvpn/server/keys
mv /etc/openvpn/server/*.key /etc/openvpn/server/keys/

sudo systemctl enable openvpn-server@server.service
sudo systemctl start openvpn-server@server.service
sudo systemctl status openvpn-server@server.service

mkdir -p ~/clients/files
cp /usr/share/doc/openvpn/examples/sample-config-files/client.conf ~/clients/base.conf
конфиг
remote IP-address
tls-crypt ta.key 1
cipher AES-256-GCM
auth SHA256
key-direction 1
redirect-gateway def1 - для Windows - полный роутинг 0.0.0.0

scp pki.rma-dev.ru:/opt/easy-rsa/pki/ca.crt ~/
cp ca.crt clients/
cp client-1.crt ~/clients/keys/
sudo cp /etc/openvpn/server/ta.key ~/clients/keys/
scp pki.rma-dev.ru:/opt/easy-rsa/pki/private/client-1.key ~/
cp ~/client-1.key ~/clients/keys/




sudo vim /etc/openvpn/server/server.conf


______


Действия сотрудника(клиента) компании
sudo apt install easy-rsa openvpn 
sudo mkdir -p /opt/easy-rsa
sudo mkdir -p /opt/openvpn
sudo ln -s /usr/share/easy-rsa/* /opt/easy-rsa/
sudo ln -s /etc/openvpn/* /opt/openvpn/
sudo chown -R $USER:$USER /opt/easy-rsa
sudo chown -R $USER:$USER /opt/open-vpn

cd /opt/easy-rsa
read -p "Enter your name for access to OpenVPN server" CLIENT
./easy-rsa init-pki
./easyrsa gen-req $CLIENT nopass
#копируем на pki-srv:
scp /opt/easy-rsa/pki/reqs/client-1.req pki.rma-dev.ru:/opt/easy-rsa/pki/reqs/client-1.req
###scp /opt/easy-rsa/pki/private/client-1.key pki.rma-dev.ru:/opt/easy-rsa/pki/private/client-1.key -это личный ключ клента
Клиенту должны прийти файлы обратно
$CLIENT_NAME.crt FROM PKI-SERVER
ta.key - from OPENVPN server
ca.crt - from PKI SERVER
mv opt/easy-rsa/pki/private/$CLIENT  /opt/open-vpn/certs

CLIENT_NAME=m.rinas
OUTPUT_DIR=/opt/open-vpn
BASE_CONFIG=/opt/open-vpn/m.rinas.conf
KEY_DIR=/opt/open-vpn/certs

cat ${BASE_CONFIG} \
<(echo -e '<ca>') \
${KEY_DIR}/ca.crt \
<(echo -e '</ca>\n<cert>') \
${KEY_DIR}/${CLIENT_NAME}.crt \
<(echo -e '</cert>\n<key>') \
${KEY_DIR}/${CLIENT_NAME}.key \
<(echo -e '</key>\n<tls-crypt>') \
${KEY_DIR}/ta.key \
<(echo -e '</tls-crypt>\n') \
> ${OUTPUT_DIR}/${CLIENT_NAME}.ovpn





redirect-gateway def1










На сервере PKI
./easyrsa sign-req client $CLIENT_NAME
--------------


#linux client for vpn
sudo apt-get update
sudo apt-get install easy-rsa openvpn


sudo mkdir -p /opt/easy-rsa
sudo mkdir -p /opt/openvpn
sudo ln -s /usr/share/easy-rsa/* /opt/easy-rsa/
sudo ln -s /etc/openvpn/* /opt/openvpn/
sudo chown -R $USER:$USER /opt/easy-rsa
sudo chown -R $USER:$USER /opt/open-vpn

